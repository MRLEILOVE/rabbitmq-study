# ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓服务器配置 ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ #
server:
  # 建议不要直接写死，可以在VM options中通过-DServer.port=8080配置
  port: 9091
  tomcat:
    uri-encoding: UTF-8
spring:
  autoconfigure:
    exclude: com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure
  main:
    allow-bean-definition-overriding: true
  application:
    name: sharding-sphere-study
  # yml在线格式转换工具（properties）:http://www.toyaml.com/index.html
  # 通过命令行方式运行项目，激活不同环境的配置：java -jar spring-boot-building-0.0.1-SNAPSHOT.jar --spring.profiles.active=dev/test/prod，
  # 连续的两个减号 -- 就是对属性值进行赋值的标识。如果你怕命令行有风险，可以使用 SpringApplication.setAddCommandLineProperties(false) 禁用它；
  profiles:
    active: dev

  ## shardingsphere配置
  shardingsphere:
    enabled: true
    # 参数配置，显示sql
    props:
      sql:
        show: true
      # 工作线程数量，默认值: CPU核数
      executor:
        size: 4

    # ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ 数据源 ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ #
    datasource:
      # 给每个数据源取别名，sharding-sphere-study-*
      names: sharding-sphere-study,sharding-sphere-study-01,sharding-sphere-study-02
      # 配置sharding-sphere-study
      sharding-sphere-study:
        # 配置druid数据源
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        password: 123456
        url: jdbc:mysql://localhost:3306/sharding-sphere-study?useUnicode=true&serverTimezone=UTC&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=false
        username: root
        # ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ Druid 连接池配置 ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ #
        ## 初始化大小
        initial-size: 5
        ## 最大
        maxActive: 20
        ## 最小
        min-idle: 5
        ## 连接等待超时时间
        maxWait: 60000
        ## 配置隔多久进行一次检测(检测可以关闭的空闲连接)
        timeBetweenEvictionRunsMillis: 60000
        ## 配置连接在池中的最小生存时间
        minEvictableIdleTimeMillis: 300000
        validationQuery: SELECT 1 FROM DUAL
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        ## 打开PSCache，并且指定每个连接上PSCache的大小
        poolPreparedStatements: true
        maxPoolPreparedStatementPerConnectionSize: 20
        ### 配置监控统计拦截的filters，去掉后监控界面sql无法统计
        ## config:指定了之后就会读取并解密数据库密码
        ## stat:统计相关
        ## wall:sql防火墙相关，防止SQL注入
        ## slf4j:日志相关
        filters: config,stat,wall,slf4j
      # 配置sharding-sphere-study-01
      sharding-sphere-study-01:
        # 配置druid数据源
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        password: 123456
        url: jdbc:mysql://localhost:3306/sharding-sphere-study-01?useUnicode=true&serverTimezone=UTC&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=false
        username: root
        # ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ Druid 连接池配置 ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ #
        ## 初始化大小
        initial-size: 5
        ## 最大
        maxActive: 20
        ## 最小
        min-idle: 5
        ## 连接等待超时时间
        maxWait: 60000
        ## 配置隔多久进行一次检测(检测可以关闭的空闲连接)
        timeBetweenEvictionRunsMillis: 60000
        ## 配置连接在池中的最小生存时间
        minEvictableIdleTimeMillis: 300000
        validationQuery: SELECT 1 FROM DUAL
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        ## 打开PSCache，并且指定每个连接上PSCache的大小
        poolPreparedStatements: true
        maxPoolPreparedStatementPerConnectionSize: 20
        ### 配置监控统计拦截的filters，去掉后监控界面sql无法统计
        ## config:指定了之后就会读取并解密数据库密码
        ## stat:统计相关
        ## wall:sql防火墙相关，防止SQL注入
        ## slf4j:日志相关
        filters: config,stat,wall,slf4j
      # 配置sharding-sphere-study-02
      sharding-sphere-study-02:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        password: 123456
        url: jdbc:mysql://localhost:3306/sharding-sphere-study-02?useUnicode=true&serverTimezone=UTC&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=false
        username: root
        # ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ Druid 连接池配置 ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ #
        ## 初始化大小
        initial-size: 5
        ## 最大
        maxActive: 20
        ## 最小
        min-idle: 5
        ## 连接等待超时时间
        maxWait: 60000
        ## 配置隔多久进行一次检测(检测可以关闭的空闲连接)
        timeBetweenEvictionRunsMillis: 60000
        ## 配置连接在池中的最小生存时间
        minEvictableIdleTimeMillis: 300000
        validationQuery: SELECT 1 FROM DUAL
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        ## 打开PSCache，并且指定每个连接上PSCache的大小
        poolPreparedStatements: true
        maxPoolPreparedStatementPerConnectionSize: 20
        ### 配置监控统计拦截的filters，去掉后监控界面sql无法统计
        ## config:指定了之后就会读取并解密数据库密码
        ## stat:统计相关
        ## wall:sql防火墙相关，防止SQL注入
        ## slf4j:日志相关
        filters: config,stat,wall,slf4j
        # druid数据库密码加密看这里:https://blog.csdn.net/k21325/article/details/78627824
        # 加密命令:
        # C:\Users\asus\.m2\repository\com\alibaba\druid\1.0.29>
        # java -cp .\druid-1.0.29.jar com.alibaba.druid.filter.config.ConfigTools your password
        # 直接在IDEA工具打开CMD窗口
        # 通过connectProperties属性来打开mergeSql功能；慢SQL记录, config.decrypt=true;config.decrypt.key={公钥}
        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000;config.decrypt=false;config.decrypt.key=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBANvoBBFlI4a0BbXAJtSopXcnvaaqOhgVN7EbJKh0AkZDjXnWbu8kF7BWQIjVkX5k19xBkq98EK/Rgcc3p+ZhcgsCAwEAAQ==
    sharding:
      # 配置默认数据源sharding-sphere-study
      default-data-source-name: sharding-sphere-study
      # 默认数据库策略 如果不分库，可不设此配置
      defaultDatabaseStrategy:
        # 分库
        standard:
          sharding-column: order_id
          # 标准-精准分片
          precise-algorithm-class-name: com.leigq.shardingspherestudy.config.MyDataBasePreciseShardingAlgorithm
          # 标准-范围分片
          range-algorithm-class-name: com.leigq.shardingspherestudy.config.MyDataBaseRangeShardingAlgorithm
      # 分库分表策略
      tables:
        # 分表表名，表名规则sharding-sphere-study-[01-02].order_[0-1]_{年}_{月}，分表依据为 id字段 % 2、创建时间年月
        t_order:
          actual-data-nodes: sharding-sphere-study-${(1..2).collect{t -> t.toString().padLeft(2,'0')}}.t_order_$->{0..1}_$->{2022..2024}_${(1..12).collect{t -> t.toString().padLeft(2,'0')}}
          # MP如果设置成雪花算法则会覆盖sharding的配置，详见：https://blog.csdn.net/weixin_43584430/article/details/120367418
          #key-generator:
          #  column: order_id
          #  type: SNOWFLAKE
          # 分库策略
          database-strategy:
            standard:
              sharding-column: order_id
              # 标准-精准分片
              precise-algorithm-class-name: com.leigq.shardingspherestudy.config.MyDataBasePreciseShardingAlgorithm
              # 标准-范围分片
              range-algorithm-class-name: com.leigq.shardingspherestudy.config.MyDataBaseRangeShardingAlgorithm
          # 分表策略
          table-strategy:
            complex:
              # 多个列，注意后面带“s”
              sharding-columns: order_id, create_time
              # 复合分片，注意前面没有“complex”
              algorithm-class-name: com.leigq.shardingspherestudy.config.MyTableComplexShardingAlgorithm


  datasource:
    # ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ Druid 监控配置 ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ #
    ## Druid监控配置，配置参考：https://blog.csdn.net/weixin_38187317/article/details/81562571
    druid:
      ## 监控过滤
      web-stat-filter:
        enabled: true
        url-pattern: /*
        exclusions: '*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*'
      ## 监控页面配置
      stat-view-servlet:
        enabled: true
        # 页面地址
        url-pattern: '/druid/*'
        # 白名单 多个ip逗号隔开
        allow: '127.0.0.1,192.168.163.1'
        # IP黑名单 (存在共同时，deny优先于allow) : 如果满足deny的话提示:Sorry, you are not permitted to view this page.
        deny: '192.168.1.73'
        # 是否允许重置数据 禁用HTML页面上的“Reset All”功能
        reset-enable: true
        # 帐号
        login-username: admin
        # 密码
        login-password: 123456

# ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ MyBatis Plus 配置 ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ #
mybatis-plus:
  # mybatis mapper文件的位置
  mapper-locations: classpath*:/mappers/**/*.xml
  # 在此处指明扫描实体类的包，在mapper.xml中就可以不用写pojo类的全路径名了
  type-aliases-package: com.leigq.shardingspherestudy.domain.entity
  configuration:
    # 使用mybatis插入自增主键ID的数据后返回自增的ID，配合keyProperty="id"使用
    use-generated-keys: true
    # 设置自动驼峰命名转换
    map-underscore-to-camel-case: true
    # spring boot集成mybatis的方式打印sql：https://blog.csdn.net/qq_22194659/article/details/81120712
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  # MP 全局配置
  global-config:
    banner: true
    db-config:
      # 主键类型（默认 ID_WORKER）
      id-type: ASSIGN_ID
      update-strategy: not_null